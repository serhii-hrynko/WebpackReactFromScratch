module.exports = {
    root: true,
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 2020,
        sourceType: 'module',
        ecmaFeatures: {
            jsx: true,
        },
    },
    env: {
        browser: true,
        node: true,
        es6: true,
        jest: true,
        commonjs: true,
    },
    extends: ['eslint:recommended', 'plugin:react/recommended', 'plugin:@typescript-eslint/recommended'],
    settings: {
        react: {
            version: 'detect',
        },
    },
    rules: {
        indent: [
            'warn',
            4,
            {
                SwitchCase: 1,
                ignoredNodes: ['TemplateLiteral'],
            },
        ],
        semi: ['warn', 'always'],
        quotes: ['warn', 'single'],
        eqeqeq: 'warn',
        'arrow-spacing': 'warn',
        'comma-dangle': ['warn', 'always-multiline'],
        'block-spacing': ['warn', 'always'],
        'jsx-quotes': ['warn', 'prefer-double'],
        'array-bracket-spacing': ['warn', 'never'],
        'computed-property-spacing': ['warn', 'never'],
        'comma-spacing': 'warn',
        'key-spacing': 'warn',
        'keyword-spacing': 'warn',
        'prefer-rest-params': 'off',
        'prefer-const': 'warn',
        'no-extra-boolean-cast': 'off',
        'no-multi-spaces': 'warn',
        'no-empty': 'warn',
        'no-unused-vars': 'off',
        'space-before-blocks': 'warn',
        'space-infix-ops': ['warn', { int32Hint: false }],
        'space-before-function-paren': [
            'warn',
            {
                anonymous: 'always',
                asyncArrow: 'always',
                named: 'never',
            },
        ],
        'object-curly-spacing': ['warn', 'always'],

        '@typescript-eslint/triple-slash-reference': 'off',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/no-object-literal-type-assertion': 'off',
        '@typescript-eslint/ban-ts-comment': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/ban-types': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/type-annotation-spacing': 'warn',
        '@typescript-eslint/no-unused-vars': 'warn',
        '@typescript-eslint/naming-convention': [
            'warn',
            {
                selector: 'interface',
                format: ['PascalCase'],
                custom: {
                    regex: '^I[A-Z]',
                    match: true,
                },
            },
            {
                selector: 'class',
                format: ['PascalCase'],
            },
            {
                selector: 'typeAlias',
                format: ['PascalCase'],
            },
            {
                selector: 'enum',
                format: ['PascalCase'],
            },
        ],

        'react/jsx-indent': ['warn', 4],
        'react/jsx-tag-spacing': ['error', { afterOpening: 'never', beforeClosing: 'never' }],
        'react/jsx-equals-spacing': [0, 'always'],
        'react/jsx-props-no-multi-spaces': 'warn',
        'react/jsx-closing-tag-location': 'warn',
        'react/self-closing-comp': ['warn'],
        'react/jsx-max-props-per-line': 'warn',
        'react/jsx-first-prop-new-line': 'warn',
        'react/jsx-closing-bracket-location': ['warn', 'line-aligned'],
        'react/jsx-key': 'warn',
        'react/prop-types': 'warn',
        'react/display-name': 'warn',
    },
};
